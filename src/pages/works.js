import React, { useState } from 'react';
import Head from 'next/head'
import NewNav from '../components/NewNav/newNav';
import styles from '../styles/Works.module.scss';
import Link from 'next/link';
import ProjectViewer from '@/components/Project/project';


export default function Home() {
  const [ toggleProjectViewer, setToggleProjectViewer] = useState(false)
  const [activeProjects, setActiveProjects] = useState([]);
  const [hoverBg, setHoverBg] = useState(null); 
  const [ projectDetails , setProjectDetails ] = useState({})

  const viewDetails = (project) => {
    setProjectDetails(project)
    setToggleProjectViewer(toggleProjectViewer => true)
  }

  const handleMouseEnter = (projectId, projectPhoto) => {
    setHoverBg(projectPhoto); 
    setActiveProjects((prevActiveProjects) => [...prevActiveProjects, projectId]);
  };


  const handleMouseLeave = (projectId) => {
    setHoverBg(false)
    setActiveProjects((prevActiveProjects) =>
      prevActiveProjects.filter((id) => id !== projectId)
    );
  };

  const projects = [
    {
      id: '1', 
      name: `Tesla Clone`, 
      siteLink:`https://makyiabonner-tesla-clone.vercel.app/`,
      codeLink:`https://github.com/makyiabonner/tesla-clone`,
      description:` In this project, I used Next.js for server-side rendering, ensuring optimal performance and SEO. TypeScript enhanced code quality, while Sass streamlined styling with modularity. This site is fully responsive.`, 
      photo:`./images/teslaclone.webp`, 
      thumbnail:`./images/teslathumbnail.webp`,
      bgSize:'20%',
      projectViewPic:'./images/teslabg.webp',
      skills: ['typescript', 'nextjs', 'sass']
    },
    {
      id: '2', 
      name: `Gram's Cooking`, 
      siteLink:`https://gramscooking.netlify.app/`,
      codeLink:`https://github.com/makyiabonner/gramscooking`,
      description:`This project is a frontend cooking site skillfully engineered using React, JavaScript, and CSS. Leveraging JavaScript's dynamism and CSS's styling capabilities. This site is fully responsive.`, 
      photo:`./images/gramscooking.webp`, 
      thumbnail:`./images/gramsthumbnail.webp`,
      bgSize:'50%',
      projectViewPic:'./images/gramsbg.webp',
      skills: ['javascript', 'react', 'css']
    },
    {
      id: '3', 
      name: `Savvy Booking`, 
      siteLink:``,
      codeLink:`https://github.com/makyiabonner/booking`,
      description:`This project was developed using Next.js, Bootstrap, Sass, and Booking.com API. Seamlessly fusing the power of Next.js for optimal rendering, Bootstrap for streamlined design components, and Sass for modular styling, I've crafted a versatile platform. This site is both responsive and adaptive.`, 
      photo:`./images/savvybooking.webp`, 
      thumbnail:`./images/savvythumbnail.webp`,
      bgSize:'75%',
      projectViewPic:'./images/savvybg.webp',
      skills: ['nextjs', 'bootstrap', 'sass']
    }
  ]
  return (
    <>
      <Head>
        <title>Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <section 
        className={styles.page} 
        style={{
          opacity:'100%',
          backgroundImage:`url(${hoverBg})`,
          backgroundSize:'100%',
          backgroundRepeat:'no-repeat',
          boxShadow:hoverBg? 'inset 0 -30em 20em rgba(0, 0, 0, .7)' : '',
          transition: 'all .05s ease-in-out .1s'
        }}
      >
        <div className={styles.left_side}
          style={{
            '@media (max-width:982px)': {
              background: `url(${hoverBg || 'black'})`,
              backgroundSize:'contain',
              backgroundRepeat:'no-repeat',
              backgroundPosition:'center 20%',
              boxShadow:hoverBg? 'inset 0 -30em 20em rgba(0, 0, 0, .7)' : '',
            }
          }}
        >
          <h1 
            className={styles.page_name}
            style={{
              color: hoverBg ? 'white' : 'black'
            }}
        >
          WORKS
        </h1>
           
        </div>
        <div className={styles.right_side}>
            <div className={styles.content_container}>
              {projects.map(project => {
                return(
                  <div 
                    key={project.id} 
                    className={`${styles[`content${project.id}`]}`} 
                    style={{
                      background:`url(${project.thumbnail})`,
                      backgroundSize:project.bgSize || 'cover',
                      backgroundPosition:'center',
                      backgroundRepeat:'no-repeat',
                      backgroundColor:'black'
                    }}
                    onMouseOver={() => handleMouseEnter(project.id, project.photo)}
                    onMouseLeave={() => handleMouseLeave(project.id)}
                  >
                    <div className={`${styles.content_hover} ${activeProjects.includes(project.id) ? styles.active : ''}`}>
                        <button onClick={() => viewDetails(project)} className={styles.viewProject}>View Details</button>
                    </div>
                  </div>
                )
              })}
            </div>
        </div>
        <NewNav mobileBg='#FFDDBD' logoTheme={hoverBg ? 'white' : 'black'} navTextColor={hoverBg ? 'white' : 'black'}/>
      </section>
      <ProjectViewer
        isOpen={toggleProjectViewer}
        onClose={() => setToggleProjectViewer(toggleProjectViewer => false)}
        skillsUsed={projectDetails.skills || []}
        name={projectDetails.name || ''}
        site={projectDetails.siteLink || '/works'}
        code={projectDetails.codeLink || '/works'}
        bgPic={projectDetails.projectViewPic}
        description={projectDetails.description || 'lorem'} />
    </>
  )
}